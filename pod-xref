#!/usr/bin/env perl

use v5.20;

use lib 'lib';

use Mojolicious::Lite -signatures;

plugin 'Config';

my $dbfile = app->config('db') // 'data/pod_index.db';

plugin Yancy => backend => 'sqlite:' . $dbfile, # mysql, sqlite, dbic...
schema =>  {
    xref => {  'x-list-columns' => [ qw( id entry link_type cooked_entry pod_page link_fragment)],
               'x-view-item-url' => '/xref-view-item/{id}',
               'x-view-url' => '/xref-view',
           },
},
;

#
# TODO: Make a list of checkboxes for all available POD files (those
# findable by Pod::Simple::Search) and let the user pick any or all of
# them, with a textbox to name that selection group; save that in the
# xref_tags table and then parse as above
#

get '/' => {
    controller => 'yancy',
    action => 'list',
    schema => 'xref',
    template => 'xref_list',
} => 'xref.list';

get '/xref/:id' => {
    controller => 'yancy',
    action => 'get',
    schema => 'xref',
    template => 'xref_get',
} => 'xref.get';

get '/entry/:entry' => {
    template => 'xref_entry',
} => 'xref.entry';

get '/xref-view-item/:id' => {
    template => 'xref_view',
} => 'xref.view';

#
# TODO:
#
# Maintain a database of official Pod documentation sources, e.g.,
#
#   https://metacpan.org/pod/
#
# to which our links may be appended, and at which the user may choose
# to point.  For example, it may be useful to point references within
# Mojo and Mojolicious to https://docs.mojolicious.org ... However,
# determining which documents exist there (for example, List::Utils
# does not) is not defined here.

app->start;



__DATA__

@@xref_view.html.ep

<%== $id %>
<%== dumper($c->yancy->get('xref',$id)) %>

@@xref_entry.html.ep

<%== param('tag') %>
<!-- if 'tag' param specified, we want where pod_page IN (pod_page from xref_tags where xref_tags.name == param('tag')) -->
<%== dumper($c->yancy->list('xref', { entry => $entry,
                                      (defined param('tag')) ? ( pod_page => { -in => \['select pod_page from xref_tags where name = ?', param('tag')] } ) : (),
                                  } , { order_by => ['pod_page', 'entry'] } )); %>

@@xref_list.html.ep

Xref List text and code goes here

% for my $item ( @{ stash 'items' } ) {
    <h1><%= $item->{entry} %></h1>
    <%== $item->{id} %>.
    <% my $u = Mojo::URL->new( app->config('pod_base') )->path( $item->{pod_page} )->fragment( $item->{link_fragment} ); %>
    <a href="<%== $u %>"><%== $item->{cooked_entry} %></a>
    ( <%== $item->{raw_entry} %> )
% }

@@xref_get.html.ep

Xref Get stuff goes here
%=$id

