#!/usr/bin/env perl

use v5.32;

use strict;
use warnings;

use lib 'lib';
use feature 'signatures';
no warnings 'experimental::signatures';

use List::MoreUtils qw(uniq);

# use Pod::Headings;
use Pod::Definitions;

binmode(STDOUT, ":utf8");

# Accepts a list of module names.  e.g., "Mojo Mojolicious"
# From this get a list of filenames in the Perl directory
# Create a hash whose keys are all the (*.pm, *.pod) files under those pathnames.
# Give POD files preference: remove any x/y.pm where x/y.pod exists.

#use File::Find::Rule;
#use Mojo::Path;

use Pod::Simple::Search;

my @file_list;

# We are passed a list of things, which can be Perl module names,
# explicit filenames, or explict directories.

push @file_list, @ARGV;

my @pods;

sub parse_a_file ($filename, $podname) {
    my $pod_file = Pod::Definitions->new();

    $pod_file->parse_file($filename, $podname);

    push @pods, $pod_file;
}


foreach my $parse_file (@file_list) {
    # TODO: 2020-10-11 Verify operation with UTF-8 pods.
    if ($parse_file =~ /\./) { # Looks like a filename
        parse_a_file($parse_file, undef);
    } else {
        # Treat argument as a glob
        Pod::Simple::Search->new()->limit_glob($parse_file)->callback(\&parse_a_file)->survey();
        if ($parse_file !~ /[*?]/) { # Without explicit glob wildcards, default also to scanning ::*
            Pod::Simple::Search->new()->limit_glob($parse_file.'::*')->callback(\&parse_a_file)->survey();
        }
    }
}

; $DB::single =1;
print "foo";
